add_namespace = force_limit
##################################
###   Demobilization Events    ###
##################################

# Check after a war whether we should be demobilizing
country_event = {
	id = force_limit.120
	immediate = { log = "[GetDateText]: [Root.GetName]: event force_limit.120" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ai = yes
		has_war = no
		OR = {
			has_unsupported_economic_law_ai = yes
			has_unsupported_manpower_law_ai = yes
		}
		NOT = {
			has_global_flag = KR_no_demob
			any_other_country = {
				OR = {
					is_justifying_wargoal_against = ROOT
					has_wargoal_against = ROOT
					ROOT = { is_justifying_wargoal_against = PREV }
					ROOT = { has_wargoal_against = PREV }
				}
			}
		}
	}

	immediate = {
		clr_country_flag = has_demobilization_check
		if = {
			limit = {
				has_unsupported_economic_law_ai = yes
				has_unattained_important_goals = no
				OR = {
					has_elected_government = yes
					has_war_support < 0.25
				}
			}
			log = "               [Root.GetName]: is reducing its economy law due to demobilization"
			if = {
				limit = { has_idea = tot_economic_mobilisation }
				add_political_power = 200
			}
			else_if = {
				limit = { has_idea = war_economy }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = partial_economic_mobilisation }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = civilian_economy
		}
		else_if = {
			limit = {
				has_unsupported_economic_law_ai = yes
				has_unattained_important_goals = no
				has_war_support < 0.50
			}
			log = "               [Root.GetName]: is reducing its economy law due to demobilization"
			if = {
				limit = { has_idea = tot_economic_mobilisation }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = war_economy }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = low_economic_mobilisation
		}
		else_if = {
			limit = { has_unsupported_economic_law_ai = yes }
			log = "               [Root.GetName]: is reducing its economy law due to demobilization"
			if = {
				limit = { has_idea = tot_economic_mobilisation }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = partial_economic_mobilisation
		}
		
		if = {
			limit = {
				has_unsupported_manpower_law_ai = yes
				has_unattained_important_goals = no
				OR = {
					has_war_support < 0.25
					has_government = social_liberal
					has_government = market_liberal
					AND = {
						has_government = social_democrat
						NOT = { has_country_flag = soc_dems_are_socialists }
					}
				}
			}
			log = "               [Root.GetName]: is reducing its conscription law due to demobilization"
			if = {
				limit = { has_idea = scraping_the_barrel }
				add_political_power = 250
			}
			else_if = {
				limit = { has_idea = all_adults_serve }
				add_political_power = 200
			}
			else_if = {
				limit = { has_idea = service_by_requirement }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = extensive_conscription }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = volunteer_only
		}
		else_if = {
			limit = {
				has_unsupported_manpower_law_ai = yes
				has_unattained_important_goals = no
				has_war_support < 0.50
			}
			log = "               [Root.GetName]: is reducing its conscription law due to demobilization"
			if = {
				limit = { has_idea = scraping_the_barrel }
				add_political_power = 200
			}
			else_if = {
				limit = { has_idea = all_adults_serve }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = service_by_requirement }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = limited_conscription
		}
		else_if = {
			limit = { has_unsupported_manpower_law_ai = yes }
			log = "               [Root.GetName]: is reducing its conscription law due to demobilization"
			if = {
				limit = { has_idea = scraping_the_barrel }
				add_political_power = 150
			}
			else_if = {
				limit = { has_idea = all_adults_serve }
				add_political_power = 100
			}
			else = {
				add_political_power = 50
			}
			add_ideas = extensive_conscription
		}
	
		if = {
			limit = {
				NOT = { has_country_flag = has_reduce_units_check }
			}
			set_country_flag = has_reduce_units_check
			country_event = { id = force_limit.121 days = 4 random = 96 }
		}	
	}
}

# Repeated check for whether an AI country should reduce its number of units
country_event = {
	id = force_limit.121
	immediate = { log = "[GetDateText]: [Root.GetName]: event force_limit.121" }

	hidden = yes
	is_triggered_only = yes

	immediate = {
		calculate_maximum_divisions = yes
		if = {
			limit = {
				is_ai = yes
				has_war = no
				num_divisions > 4
				OR = {
					has_excessive_army_size = yes
					needs_army_reduction_for_manpower = yes
					AND = {
						has_reached_maximum_divisions = yes
						NOT = { has_global_flag = KR_no_unit_limits }
					}
				}
				NOT = {
					any_other_country = {
						OR = {
							is_justifying_wargoal_against = ROOT
							has_wargoal_against = ROOT
							ROOT = { is_justifying_wargoal_against = PREV }
							ROOT = { has_wargoal_against = PREV }
						}
					}
				}
			}
			log = "               [Root.GetName]: is disbanding 20% of its units due to demobilization"
			disband_twenty_percent_units = yes
			country_event = { id = force_limit.121 days = 7 random = 72 }
		}
		else = {
			clr_country_flag = has_reduce_units_check
		}
	}
}

# Check whether a player should have mobilisation penalties
country_event = {
	id = force_limit.122
	immediate = { log = "[GetDateText]: [Root.GetName]: event force_limit.122" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_reached_maximum_divisions = yes
		NOT = {
			has_global_flag = KR_no_unit_limits
			has_global_flag = KR_unit_limits_ai_only
			has_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
		}
	}

	option = {
		calculate_mobilisation_penalty = yes
		add_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
		country_event = { id = force_limit.123 days = 7 }
	}
}

# Check whether a player should still have mobilisation penalties
country_event = {
	id = force_limit.123
	immediate = { log = "[GetDateText]: [Root.GetName]: event force_limit.123" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
	}
	
	immediate = {
		country_event = { id = force_limit.123 days = 7 }
	}

	option = {
		if = {
			limit = {
				OR = {
					is_ai = yes
					has_reached_maximum_divisions = no
				}
			}
			clear_variable = mobilisation_penalty_var
			clear_variable = mobilisation_penalty_var_positive
			remove_dynamic_modifier = { modifier = mobilisation_penalty_modifier }
		}
		else = {
			calculate_maximum_divisions = yes
			calculate_mobilisation_penalty = yes
		}
	}
}

country_event = {
	id = force_limit.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event force_limit.123" }

	hidden = no
	is_triggered_only = yes

	option = {
		calculate_maximum_divisions = yes
	}
}