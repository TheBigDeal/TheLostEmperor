first_every_month_script = {
	add_to_variable = { amount_of_pulses_passed = 1 }
	every_country = {
		if = {
			limit = {
				econ_can_use_economy_system = yes
			}
			calculate_total_budget = yes
			calculate_civilian_expenditures = yes
			calculate_construction_expenditures = yes
			calculate_military_expenditures = yes
			calculate_total_expenditures = yes
			calculate_total_expenditures_factor = yes
			calculate_deficit = yes
			calculate_GDP_growth = yes

			if = {
				limit = { is_ai = yes }
				if = {
					limit = { check_variable = { deficit_ratio < 0.25 } }
					random_list = {
						90 = {
							tno_improve_construction_laws = yes
						}
						10 = {

						}
					}
				}
				else_if = {
					limit = { check_variable = { deficit_ratio < 0.4 } }
					random_list = {
						50 = {
							tno_improve_construction_laws = yes
						}
						40 = {

						}
						10 = {
							tno_worsen_construction_laws = yes
						}
					}
				}
				else_if = {
					limit = { check_variable = { deficit_ratio < 0.7 } }
					random_list = {
						70 = {

						}
						30 = {
							tno_worsen_construction_laws = yes
						}
					}
				}
				else_if = {
					limit = { check_variable = { deficit_ratio < 1.5 } }
					random_list = {
						20 = {

						}
						70 = {
							tno_worsen_construction_laws = yes
						}
						10 = {
							tno_worsen_construction_laws = yes
							tno_worsen_construction_laws = yes
						}
					}
				}
				else = {
					random_list = {
						30 = {
							tno_worsen_construction_laws = yes
						}
						70 = {
							tno_worsen_construction_laws = yes
							tno_worsen_construction_laws = yes
						}
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = { modifier@monthly_population < -1 }
			}
			properly_reduce_population = yes
		}
	}
	every_country = {
		societal_development_monthly_check = yes
	}
	ORS = { #Dirlywanker's System To Replace Ideas
        add_to_variable = { ORS_Dirlewanger_Brigade_Angery_Level = 1 } #Balancing
        add_to_variable = { ORS_Dirlewanger_Officer_Angery_Level = 1 } #Balancing
        if = {
            limit = {
                has_idea = ORS_Soldiers_Extra_Discontent_Idea
                check_variable = { ORS_Dirlewanger_Brigade_Angery_Level < 41 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_Extra_Discontent_Idea
            add_idea = ORS_Soldiers_Discontent_Idea
            }
            country_event = ORS.371
        }
        if = {
            limit = {
                has_idea = ORS_Soldiers_Discontent_Idea
                check_variable = { ORS_Dirlewanger_Brigade_Angery_Level > 40 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_Discontent_Idea
            add_idea = ORS_Soldiers_Extra_Discontent_Idea
            }
            country_event = ORS.370
        }
        if = {
            limit = {
                has_idea = ORS_Soldiers_Discontent_Idea
                check_variable = { ORS_Dirlewanger_Brigade_Angery_Level < 31 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_Discontent_Idea
            add_idea = ORS_Soldiers_Okay_Idea
            }
            country_event = ORS.371
        }
        if = {
            limit = {
                has_idea = ORS_Soldiers_Okay_Idea
                check_variable = { ORS_Dirlewanger_Brigade_Angery_Level > 30 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_Okay_Idea
            add_idea = ORS_Soldiers_Discontent_Idea
            }
            country_event = ORS.370
        }
        if = {
            limit = {
                has_idea = ORS_Soldiers_Okay_Idea
                check_variable = { ORS_Dirlewanger_Brigade_Angery_Level < 21 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_Okay_Idea
            add_idea = ORS_Soldiers_A_Bit_Happy_Idea
            }
            country_event = ORS.371
        }
        if = {
            limit = {
                has_idea = ORS_Soldiers_A_Bit_Happy_Idea
                check_variable = { ORS_Dirlewanger_Brigade_Angery_Level > 20 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_A_Bit_Happy_Idea
            add_idea = ORS_Soldiers_Okay_Idea
            }
            country_event = ORS.370
        }
        if = {
            limit = {
                has_idea = ORS_Soldiers_A_Bit_Happy_Idea
                check_variable = { ORS_Dirlewanger_Brigade_Angery_Level < 11 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_A_Bit_Happy_Idea
            add_idea = ORS_Soldiers_Happy_Idea
            }
            country_event = ORS.371
        }
        if = {
            limit = {
                has_idea = ORS_Soldiers_Happy_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level > 10 }
            }
            swap_ideas = {
            remove_idea = ORS_Soldiers_Happy_Idea
            add_idea = ORS_Soldiers_A_Bit_Happy_Idea
            }
            country_event = ORS.370
        }
        if = {
            limit = { #Officers
                has_idea = ORS_Officers_Disloyal_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level < 41 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Disloyal_Idea
            add_idea = ORS_Officers_Disrespectful_Idea
            }
            country_event = ORS.373
        }
        if = {
            limit = {
                has_idea = ORS_Officers_Disrespectful_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level > 40 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Disrespectful_Idea
            add_idea = ORS_Officers_Disloyal_Idea
            }
            country_event = ORS.372
        }
        if = {
            limit = {
                has_idea = ORS_Officers_Disrespectful_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level < 31 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Disrespectful_Idea
            add_idea = ORS_Officers_Normal_Idea
            }
            country_event = ORS.373
        }
        if = {
            limit = {
                has_idea = ORS_Officers_Normal_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level > 30 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Normal_Idea
            add_idea = ORS_Officers_Disrespectful_Idea
            }
            country_event = ORS.372
        }
        if = {
            limit = {
                has_idea = ORS_Officers_Normal_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level < 21 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Normal_Idea
            add_idea = ORS_Officers_Respect_Idea
            }
            country_event = ORS.373
        }
        if = {
            limit = {
                has_idea = ORS_Officers_Respect_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level > 20 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Respect_Idea
            add_idea = ORS_Officers_Normal_Idea
            }
            country_event = ORS.372
        }
        if = {
            limit = {
                has_idea = ORS_Officers_Respect_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level < 11 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Respect_Idea
            add_idea = ORS_Officers_Unswayingly_Loyal_Idea
            }
            country_event = ORS.373
        }
        if = {
            limit = {
                has_idea = ORS_Officers_Unswayingly_Loyal_Idea
                check_variable = { ORS_Dirlewanger_Officer_Angery_Level > 10 }
            }
            swap_ideas = {
            remove_idea = ORS_Officers_Unswayingly_Loyal_Idea
            add_idea = ORS_Officers_Respect_Idea
            }
            country_event = ORS.372
        }
	}
	#Lysenko sanity decrease
	BAS = {
		if = {
			limit = {
				check_variable = {
					var = lysenko_sanity
					value = 0
					compare = greater_than
				}
				NOT = {
					has_country_flag = BAS_NKVD_coup
				}
			}
			subtract_from_variable = {
				var = lysenko_sanity
				value = 3
			}
			clamp_variable = {
				var = lysenko_sanity
				max = 100
				min = 0
			}
		}
		if = {
			limit = {
				check_variable = {
					var = lysenko_sanity
					value = 0
					compare = equals
				}
			}
			country_event = {
				id = BAS.255
				days = 1
			}
		}
		if = {
			limit = {
				has_country_flag = BAS_NKVD_coup
			}
			remove_ideas = {
			BAS_SANITY_NEUTRAL
			BAS_SANITY_LOW
			BAS_SANITY_HIGH
			}
		}
		if = {
			limit = {
					NOT = {
						has_country_flag = BAS_NKVD_coup
					}
			}
			add_to_variable = { lysenko_nkvd_disloyalty = 2 }
			add_to_variable = { lysenko_nkvd_influence = 2 }
		}
	}
	#NKVD Stufffffff
	if = {
		limit = {
			has_idea = BAS_Lysenko_Influence_Very_Low
		}
		remove_ideas = BAS_Lysenko_Influence_Very_Low
	}
	if = {
		limit = {
			has_idea = BAS_Lysenko_Influence_Low
		}
		remove_ideas = BAS_Lysenko_Influence_Low
	}
	if = {
		limit = {
			has_idea = BAS_Lysenko_Influence_Medium
		}
		remove_ideas = BAS_Lysenko_Influence_Medium
	}
	if = {
		limit = {
			has_idea = BAS_Lysenko_Influence_High
		}
		remove_ideas = BAS_Lysenko_Influence_High
	}
	if = {
		limit = {
			has_idea = BAS_Lysenko_Influence_Very_High
		}
		remove_ideas = BAS_Lysenko_Influence_Very_High
	}
	if = {
		limit = {
			check_variable = {
				lysenko_nkvd_influence < 20
			}
		}
		add_ideas = BAS_Lysenko_Influence_Very_Low
	}
	if = {
		limit = {
			check_variable = {
				lysenko_nkvd_influence > 20
			}
			check_variable = {
				lysenko_nkvd_influence < 41
			}
		}
		add_ideas = BAS_Lysenko_Influence_Low
	}
	if = {
		limit = {
			check_variable = {
				lysenko_nkvd_influence > 40
			}
			check_variable = {
				lysenko_nkvd_influence < 61
			}
		}
		add_ideas = BAS_Lysenko_Influence_Medium
	}
	if = {
		limit = {
			check_variable = {
				lysenko_nkvd_influence > 60
			}
			check_variable = {
				lysenko_nkvd_influence < 81
			}
		}
		add_ideas = BAS_Lysenko_Influence_High
	}
	if = {
		limit = {
			check_variable = {
				lysenko_nkvd_influence > 80
			}
		}
		add_ideas = BAS_Lysenko_Influence_Very_High
	}
}
#for when monthly_population is less than -1
properly_reduce_population = {
	set_temp_variable = { manpower_to_remove_k = 0 }
	every_owned_state = {
		set_temp_variable = { manpower_to_remove_k = PREV.modifier@monthly_population }
		add_to_temp_variable = { manpower_to_remove_k = 1 } #e.g. -1.5 means to remove 50% of the growth rate
		multiply_temp_variable = { manpower_to_remove_k = state_population_k }
		multiply_temp_variable = { manpower_to_remove_k = 0.0013 } #base pop growth
		add_to_temp_variable = { PREV.manpower_to_remove_k = manpower_to_remove_k }
	}
	multiply_temp_variable = { manpower_to_remove_k = 1000 }
	log = "[GetDateText]: [GetName]: removed [?manpower_to_remove_k] manpower "
	add_manpower = manpower_to_remove_k
}

societal_development_monthly_check = {
	add_to_variable = { poverty_counter = poverty_monthly_change }
	add_to_variable = { academic_base_counter = academic_base_monthly_change }
	add_to_variable = { agriculture_counter = agriculture_monthly_change }
	add_to_variable = { army_professionalism_counter = army_professionalism_monthly_change }
	add_to_variable = { research_facilities_counter = research_facilities_monthly_change }
	add_to_variable = { nuclear_stockplie_counter = nuclear_stockplie_monthly_change }
	add_to_variable = { industrial_expertise_counter = industrial_expertise_monthly_change }
	add_to_variable = { industrial_equipment_counter = industrial_equipment_monthly_change }

	if = {
		limit = { check_variable = { poverty_counter > 239 } }
		country_event = { id = societal_development.1102 days = 30 random = 2880 }
		add_to_variable = { poverty_counter = -240 }
		multiply_variable = { poverty_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { poverty_counter < -239 } }
		country_event = { id = societal_development.1103 days = 30 random = 2880 }
		add_to_variable = { poverty_counter = 240 }
		multiply_variable = { poverty_monthly_change = 0.25 }
	}

	if = {
		limit = { check_variable = { academic_base_counter > 239 } }
		country_event = { id = societal_development.1104 days = 30 random = 2880 }
		add_to_variable = { academic_base_counter = -240 }
		multiply_variable = { academic_base_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { academic_base_counter < -239 } }
		country_event = { id = societal_development.1105 days = 30 random = 2880 }
		add_to_variable = { academic_base_counter = 240 }
		multiply_variable = { academic_base_monthly_change = 0.25 }
	}

	if = {
		limit = { check_variable = { research_facilities_counter > 239 } }
		country_event = { id = societal_development.1106 days = 30 random = 2880 }
		add_to_variable = { research_facilities_counter = -240 }
		multiply_variable = { research_facilities_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { research_facilities_counter < -239 } }
		country_event = { id = societal_development.1107 days = 30 random = 2880 }
		add_to_variable = { research_facilities_counter = 240 }
		multiply_variable = { research_facilities_monthly_change = 0.25 }
	}

	if = {
		limit = { check_variable = { nuclear_stockplie_counter > 239 } }
		country_event = { id = societal_development.1108 days = 30 random = 2880 }
		add_to_variable = { nuclear_stockplie_counter = -240 }
		multiply_variable = { nuclear_stockplie_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { nuclear_stockplie_counter < -239 } }
		country_event = { id = societal_development.1109 days = 30 random = 2880 }
		add_to_variable = { nuclear_stockplie_counter = 240 }
		multiply_variable = { nuclear_stockplie_monthly_change = 0.25 }
	}

	if = {
		limit = { check_variable = { industrial_expertise_counter > 239 } }
		country_event = { id = societal_development.1110 days = 30 random = 2880 }
		add_to_variable = { industrial_expertise_counter = -240 }
		multiply_variable = { industrial_expertise_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { industrial_expertise_counter < -239 } }
		country_event = { id = societal_development.1111 days = 30 random = 2880 }
		add_to_variable = { industrial_expertise_counter = 240 }
		multiply_variable = { industrial_expertise_monthly_change = 0.25 }
	}

	if = {
		limit = { check_variable = { industrial_equipment_counter > 239 } }
		country_event = { id = societal_development.1112 days = 30 random = 2880 }
		add_to_variable = { industrial_equipment_counter = -240 }
		multiply_variable = { industrial_equipment_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { industrial_equipment_counter < -239 } }
		country_event = { id = societal_development.1113 days = 30 random = 2880 }
		add_to_variable = { industrial_equipment_counter = 240 }
		multiply_variable = { industrial_equipment_monthly_change = 0.25 }
	}

	if = {
		limit = { check_variable = { agriculture_counter > 239 } }
		country_event = { id = societal_development.1114 days = 30 random = 2880 }
		add_to_variable = { agriculture_counter = -240 }
		multiply_variable = { agriculture_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { agriculture_counter < -239 } }
		country_event = { id = societal_development.1115 days = 30 random = 2880 }
		add_to_variable = { agriculture_counter = 240 }
		multiply_variable = { agriculture_monthly_change = 0.25 }
	}

	if = {
		limit = { check_variable = { army_professionalism_counter > 239 } }
		country_event = { id = societal_development.1116 days = 30 random = 2880 }
		add_to_variable = { army_professionalism_counter = -240 }
		multiply_variable = { army_professionalism_monthly_change = 0.25 }
	}
	else_if = {
		limit = { check_variable = { army_professionalism_counter < -239 } }
		country_event = { id = societal_development.1117 days = 30 random = 2880 }
		add_to_variable = { army_professionalism_counter = 240 }
		multiply_variable = { army_professionalism_monthly_change = 0.25 }
	}
}
first_every_year_script = {
	every_country = {
		limit = {
			econ_can_use_economy_system = yes
		}
		save_event_target_as = my_country	
		#log = "[GetDateText]: [This.GetName]: running civ growth effect"
		set_temp_variable = { civs_to_build = 0 }
		add_to_variable = { civ_buildup = GDP_growth }
		set_temp_variable = { civ_proportion = 1 }
		set_temp_variable = { num_civs = num_of_civilian_factories }
		add_to_temp_variable = { num_civs = 1 }
		divide_temp_variable = { civ_proportion = num_civs }
		#log = "[GetDateText]: [This.GetName]: civ_buildup = [?civ_buildup]; civ_proportion = [?civ_proportion];"
		resize_array = {
    		array = while_array
    		size = 100
		}
		for_each_loop = {
			array = while_array
			if = {
				limit = {
						check_variable = { civ_buildup > civ_proportion }
				}
				subtract_from_variable = { civ_buildup = civ_proportion }
				add_to_temp_variable = { civs_to_build = 1 }
				else = {
					set_temp_variable = { break = 0 }
				}
			}
		}
		clear_array = while_array
		#log = "[GetDateText]: [This.GetName]: civ_buildup = [?civ_buildup]; civ_proportion = [?civ_proportion];"
		#log = "[GetDateText]: [This.GetName]: civs_to_build = [?civs_to_build];"
		for_each_scope_loop = {
			array = owned_controlled_states

			set_temp_variable = { civ_weight = industrial_complex_level }
			divide_temp_variable = { civ_weight = event_target:my_country.num_civs }
			set_temp_variable = { civ_chance = random }
			divide_temp_variable = { civ_chance = 2 }
			clamp_temp_variable = {
    			var = civ_chance
				min = 0
    			max = 0.5
			}
			if = {
				limit = {
					var:owned_controlled_states^v = { has_state_category = megalopolis }
				}
				multiply_temp_variable = { civ_weight = 5 }
			}
			else_if = {
				limit = {
					var:owned_controlled_states^v = { has_state_category = metropolis }
				}
				multiply_temp_variable = { civ_weight = 4 }
			}
			else_if = {
				limit = {
					var:owned_controlled_states^v = { has_state_category = large_city }
				}
				multiply_temp_variable = { civ_weight = 3 }
				else = {
					multiply_temp_variable = { civ_weight = 2 }
				}
			}
			#log = "[GetDateText]: [This.Owner.GetName]: [This.GetName]: civ_chance = [?civ_chance]; civ_weight = [?civ_weight]"
			if = {
				limit = {
					check_variable = { event_target:my_country.civs_to_build > 0 }
					var:owned_controlled_states^v = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = yes
						}
					}
					check_variable = { civ_chance < civ_weight }
				}
				#log = "[GetDateText]: [This.Owner.GetName]: all criteria met."
				var:owned_controlled_states^v = {
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
					subtract_from_temp_variable = { event_target:my_country.civs_to_build = 1 }
					log = "[GetDateText]: [This.Owner.GetName]: Civilian Factory Built in [This.GetName]"
				}
			}
			else_if = {
				limit = {
					check_variable = { PREV.civs_to_build < 1 }
				}
				#log = "[GetDateText]: [This.Owner.GetName]: No Civilian Factory Built in [This.GetName]"
				set_temp_variable = { break = 0 }
			}
		}
		if = {
			limit = {
				check_variable = { civs_to_build > 0 }
			}
			random_owned_controlled_state = {
				add_extra_state_shared_building_slots = civs_to_build
				add_building_construction = {
					type = industrial_complex
					level = civs_to_build
					instant_build = yes
				}
				log = "[GetDateText]: [This.Owner.GetName]: Backup Civilian Factories Built in [This.GetName]"
				set_temp_variable = { civs_to_build = 0 }
			}
		}
	}
}