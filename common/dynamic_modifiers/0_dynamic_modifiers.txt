#	Example:
#
#	example_dynamic_modifier = {
#		icon = "GFX_idea_unknown" # optional, will show up in guis if icon is specified
#		enable = { always = yes } #optional, the modifier won't apply if not enabled
#		remove_trigger = { always = no } #optional, will remove the modifier if true
#
#		# list of modifiers
#		fuel_cost = 321
#		max_fuel = var_max_fuel # will be taken from a variable
#	}
#
#
#	In a script file:
#
#	effect = {
#		add_dynamic_modifier = {
#			modifier = example_dynamic_modifier
#			scope = GER # optional, if you specify this your dynamic modifier scoped to this scope (root is the effect scope)
#			days = 14 # optional, will be removed after this many days passes
#		}
#	}
#
#	can be added to countries, states or unit leaders
#	will only updated daily, unless forced by force_update_dynamic_modifier effect

#force_limit_dynamic_modifier = {
#	icon = "GFX_idea_unknown" # optional, will show up in guis if icon is specified
#	enable = { ROOT = { check_variable = { num_divisions > force_limit } } #optional, the modifier won't apply if not enabled
#	remove_trigger = { ROOT = { check_variable = { num_divisions < force_limit } } } #optional, will remove the modifier if true
#	effect = {
#		add_dynamic_modifier = {
#			modifier = example_dynamic_modifier
#			scope = ROOT
#		}
#	}
#}

LE_sunni_radicalism_modifier = {
	enable = { has_idea = le_religion_sunni }

	labryscism_drift = global.LE_sunni_radicalism_var
}

LE_shia_radicalism_modifier = {
	enable = { has_idea = le_religion_shia }
  absolutism_drift = global.LE_shia_radicalism_var
}

LE_ibadi_radicalism_modifier = {
	enable = { has_idea = le_religion_ibadi }
  theocracy_drift = global.LE_ibadi_radicalism_var
}
LE_food_dynamic_modifier = {
	enable = { always = yes }
	country_resource_food = root.food_needed_dm
}
LE_food_famine_dynamic_modifier = {
	enable = { check_variable = { root.current_food = 0 } }
	surrender_limit = root.famine_value
	stability_factor = root.famine_value
}
LE_tur_rebels_modifier = {
	#enable = { has_idea = TUR_rebels_to_the_last_breath }
	enable = { always = yes }
	icon = GFX_modifiers_sabotaged_resource
	army_core_defence_factor = TUR.TUR_rebels_strength
	army_core_attack_factor = TUR.TUR_rebels_strength
	army_org_factor = TUR.TUR_rebels_strength
	conscription = 0.20
}

sabotaged_resources = {
	remove_trigger = {
		has_resistance = no
	}
	icon = GFX_modifiers_sabotaged_resource
	temporary_state_resource_oil = sabotaged_oil
	temporary_state_resource_aluminium = sabotaged_aluminium
	temporary_state_resource_rubber = sabotaged_rubber
	temporary_state_resource_tungsten = sabotaged_tungsten
	temporary_state_resource_steel = sabotaged_steel
	temporary_state_resource_chromium = sabotaged_chromium
}

autonomous_state = {
	enable = { always = yes }

	icon = GFX_modifiers_sabotaged_resource

	recruitable_population_factor = -0.5
	local_building_slots_factor = -0.25
	state_resources_factor = -0.25
	state_production_speed_buildings_factor = -0.25
}

semi_autonomous_state = {
	enable = { always = yes }

	icon = GFX_modifiers_sabotaged_resource

	local_building_slots_factor = -0.25
	state_resources_factor = -0.25
	state_production_speed_buildings_factor = -0.25
}
